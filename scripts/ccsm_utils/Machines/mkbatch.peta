#! /bin/csh -f
set mach = peta

#################################################################################
if ($PHASE == set_batch) then
#################################################################################

source ./Tools/ccsm_getenv || exit -1

set ntasks  = `${CASEROOT}/Tools/taskmaker.pl -sumonly`
set maxthrds = `${CASEROOT}/Tools/taskmaker.pl -maxthrds`
@ nodes = $ntasks / ${MAX_TASKS_PER_NODE}
if ( $ntasks % ${MAX_TASKS_PER_NODE} > 0) then
  @ nodes = $nodes + 1
  @ ntasks = $nodes * ${MAX_TASKS_PER_NODE}
endif
@ taskpernode = ${MAX_TASKS_PER_NODE} / ${maxthrds}
set qname = ct400
set tlimit = "24:00:00"

#--- Job name is first fifteen characters of case name ---
#set jobname = `echo ${CASE} | cut -c1-15` # first fifteen characters of case name
set jobname = `echo ${CASE}` # first fifteen characters of case name

if ($?TESTMODE) then
 set file = $CASEROOT/${CASE}.test
else
 set file = $CASEROOT/${CASE}.run
endif

cat >! $file << EOF1
#!/bin/csh -f
#===============================================================================
#  This is a CCSM batch job script 
#===============================================================================
#PBS -N ${jobname}
#PBS -q ${qname}
#PBS -P `get_su_balance |tail -n 1|cut -d "," -f 2`
#PBS -l nodes=${nodes}:ppn=${taskpernode}
#PBS -o \${RUNDIR}/outfile
#PBS -e \${RUNDIR}/errfile
#PBS -S /bin/csh -V

cd \$PBS_O_WORKDIR
source env_mach_specific
limit coredumpsize 1000000
limit stacksize unlimited

EOF1

#################################################################################
else if ($PHASE == set_exe) then
#################################################################################
source ./Tools/ccsm_getenv || exit -1

set maxthrds = `${CASEROOT}/Tools/taskmaker.pl -maxthrds`
set maxtasks = `${CASEROOT}/Tools/taskmaker.pl -sumtasks`

cat >> ${CASEROOT}/${CASE}.run << EOF1
# -------------------------------------------------------------------------
# Run the model
# -------------------------------------------------------------------------

sleep 25
cd \$RUNDIR
echo "\`date\` -- CSM EXECUTION BEGINS HERE" 

setenv OMP_NUM_THREADS ${maxthrds}
/pkg/openmpi/3.0.0/intel/2018_u1/bin/mpiexec \$EXEROOT/cesm.exe >&! cesm.log.\$LID

wait

echo "\`date\` -- CSM EXECUTION HAS FINISHED" 

EOF1


#################################################################################
else if ($PHASE == set_larch) then
#################################################################################


   #This is a place holder for a long-term archiving script


#################################################################################
else
#################################################################################

    echo "  PHASE setting of $PHASE is not an accepted value"
    echo "  accepted values are set_batch, set_exe and set_larch"
    exit 1

#################################################################################
endif
#################################################################################
